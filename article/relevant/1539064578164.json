{"relevantArticles":[{"articleTitle":"Spring 定时任务 No qualifying bean of type TaskScheduler available 及 Could not find default TaskScheduler bean异常处理","articleAbstractText":"最近使用 Spring + SpringMvc + Quartz 的系统中，使用@annotation 注解方式, 直接在类的方法上使用@Scheduled(cron=\u201d0 /5 * * ?\u201d)来实现定时任务，在使用 debug 日志级别时，启动提示 No qualifying bean of type TaskScheduler available 及 Could not find default TaskScheduler bean 异常。可以通过配置日志级别进行解决。","articleStatus":0,"articlePermalink":"/articles/2019/05/29/1559099232927.html","articleImg1URL":"https://img.hacpai.com/bing/20180418.jpg?imageView2/1/w/960/h/270/interlace/1/q/100"},{"articleTitle":"3 ways to start Appium Server from Java","articleAbstractText":"When you start learning Appium or start writing your first test script with it, your initial approach (especially from a beginner\u2019s point of view) would be to start and stop the Appium server manually. Initially, a lot of people start working with the GUI based Appium versions.  GUI versions of Appium are easy to use, and users can easily start and stop the Appium server manually using the controls provided in the tool. After some time, many people would download and install the latest versions ....","articleStatus":0,"articlePermalink":"/articles/2018/11/04/1541295639948.html","articleImg1URL":"http://www.automationtestinghub.com/images/appium/3-different-ways-to-start-appium-server-from-java.png"},{"articleTitle":"感受Lambda之美，推荐收藏，需要时查阅","articleAbstractText":"Java8 最大的特性就是引入 Lambda 表达式，即函数式编程，可以将行为进行传递。总结就是：使用不可变值与函数，函数对不可变值进行处理，映射成另一个值。","articleStatus":0,"articlePermalink":"/articles/2019/06/09/1560086633135.html","articleImg1URL":"https://img.hacpai.com/bing/20190322.jpg?imageView2/1/w/960/h/300/interlace/1/q/100"},{"articleTitle":"A Step By Step Guide to Tomcat Performance Monitoring","articleAbstractText":"Monitoring the metrics and runtime characteristics of an application server is essential to ensure the adequate functioning of the applications running on that server, as well as to prevent or resolve potential issues in a timely manner.  As far as Java applications go, one of the most commonly used servers is Apache Tomcat, which will be the focus of this article. Tomcat performance monitoring can be done either by relying on JMX beans or by using a dedicated monitoring tool like MoSKito or Jav....","articleStatus":0,"articlePermalink":"/articles/2018/11/22/1542873600838.html","articleImg1URL":"https://stackify.com/wp-content/uploads/2017/09/Tomcat-Performance-793x397.png"},{"articleTitle":"Tomcat 配置导致启动时，项目加载两次的解决办法","articleAbstractText":"Tomcat 在启动的时候，由于配置原因，导致工程会被加载两次，很容易出现内存溢出。如果有定时任务，也可能导致定时任务执行两次，从而出现问题。","articleStatus":0,"articlePermalink":"/articles/2019/05/11/1557556661045.html","articleImg1URL":"https://img.hacpai.com/bing/20180522.jpg?imageView2/1/w/960/h/340/interlace/1/q/100"},{"articleTitle":"自建内网可用JRebel激活服务器","articleAbstractText":"自建内网可用 JRebel 激活服务器，主要采用 JrebelLicenseServerforJava，部署于服务器上的 Tomcat 中提供服务。  服务器地址，打开后有使用说明：http://niuniu.hicp.net/jrebel","articleStatus":0,"articlePermalink":"/articles/2018/10/09/1539066409411.html","articleImg1URL":"https://raw.githubusercontent.com/zxniuniu/solo/master/2233ce58e5eb4652b2e8ade9cc9f3dd8_Jrebel.PNG"},{"articleTitle":"Idea 中使用 JRebel 实现 SpringBoot 热部署","articleAbstractText":"在 SpringBoot 开发过程中，当 Debug 项目时，修改代码逻辑、修改接口路由、新增工具类等等情况下，一般都需要重新启动工程。通过配置 JRebel 可实现热部署，保存代码后自动编译新文件，并通过 JRebel 自动 Reload，从而实现快捷开发。","articleStatus":0,"articlePermalink":"/articles/2020/03/26/1585192214841.html","articleImg1URL":"https://img.hacpai.com/bing/20180408.jpg?imageView2/1/w/960/h/240/interlace/1/q/100"},{"articleTitle":"Pros and cons of end to end testing tools","articleAbstractText":"My background in test automation is based on using Selenium WebDriver and Java. Since JavaScript has been widely used for testing web applications, I have decided to investigate tools currently available on the market. I will use these tools to make different scripts and hence find their advantages and disadvantages.  I have investigated the following tools and syntax for automation:  Selenium Webdriver + Java Selenium WebDriver + Cucumber + Java Selenium WebDriver + Jasmine syntax for JavaScrip....","articleStatus":0,"articlePermalink":"/articles/2018/11/24/1543063983807.html","articleImg1URL":"https://img.hacpai.com/bing/20181222.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Spring MVC 控制器定义与@RequestMapping详解","articleAbstractText":"控制器提供访问应用程序的行为，通常通过服务接口定义或注解定义两种方法实现。 控制器解析用户的请求并将其转换为一个模型。在 Spring MVC 中一个控制器可以包含多个 Action（动作、方法）。","articleStatus":0,"articlePermalink":"/articles/2018/12/23/1545494483392.html","articleImg1URL":"https://img.hacpai.com/bing/20180223.jpg?imageView2/1/w/960/h/520/interlace/1/q/100"},{"articleTitle":"搭建Tomcat集群&通过Redis缓存共享session的一种流行方案","articleAbstractText":"我们使用单台 Tomcat 的时候不会有共享 sesssion 的疑虑，只要使用 Tomcat 的默认配置即可，session 即可存储在 Tomcat 上。但是随着业务的扩大，增加 Tomcat 节点构成 Tomcat 集群大势所趋，分布式带来了增加更大规模并发请求的优势，但是也随之到来了一个问题，每个 Tomcat 只存储来访问自己的请求产生的 session，如果 Tomcat-A 已经为客户端 C 创建了会话 session，那么 Tomcat-B 并不知道客户端已与集群中的 Tomcat-A 产生了会话，在访问时就会为 C 再创建一份 session，如果是基于 session 的验证会话权限的接口(如用户登录认证后才可访问的数据接口)，将会导致在访问集群中不同节点的时候重复认证。session 的不共享导致原来的会话管理机制在 Tomcat 集群中无法工作。","articleStatus":0,"articlePermalink":"/articles/2019/02/02/1549081414704.html","articleImg1URL":"https://raw.githubusercontent.com/zxniuniu/solo/master/326c3878d3de44b3a5779e37973fb670_4139826312592ba7407981c_articlex.jpg"}]}