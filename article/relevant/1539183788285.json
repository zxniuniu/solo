{"relevantArticles":[{"articleTitle":"SS/SSR中转V2ray起飞教程","articleAbstractText":"目前市面上已经有很多机场（提供 SS/SSR 服务的网站），且不乏众多公益机场，这些机场因为拥有一些好线路的服务器，所以在使用的时候可以获得较好的突破网络封锁的体验。本文的初衷是规避使用机场时流量隐私泄露的问题\u2014\u2014如何使用机场服务的同时不暴露自己的流量隐私。","articleStatus":0,"articlePermalink":"/articles/2019/05/23/1558608311047.html","articleImg1URL":"https://img.hacpai.com/file/2019/05/ssssrtov2ray-76f51eaf.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"Javascript Injection With Selenium, Puppeteer, And Marionette In Chrome And Firefox","articleAbstractText":"Browser automation frameworks\u2013like Puppeteer, Selenium, Marionette, and Nightmare.js\u2013strive to provide rich APIs for configuring and interacting with Web browsers. These generally work quite well, but you\u2019re inevitably going to end up running into API limitations if you do a lot of testing or Web scraping. You might find yourself wanting to conceal the fact that you\u2019re using a headless browser, extract image resources from a Web page, set the seed for Math.random(), or mock the browser\u2019s geoloca....","articleStatus":0,"articlePermalink":"/articles/2018/10/12/1539357955729.html","articleImg1URL":"https://img.hacpai.com/bing/20180504.jpg?imageView2/1/w/960/h/520/interlace/1/q/100"},{"articleTitle":"Pros and cons of end to end testing tools","articleAbstractText":"My background in test automation is based on using Selenium WebDriver and Java. Since JavaScript has been widely used for testing web applications, I have decided to investigate tools currently available on the market. I will use these tools to make different scripts and hence find their advantages and disadvantages.  I have investigated the following tools and syntax for automation:  Selenium Webdriver + Java Selenium WebDriver + Cucumber + Java Selenium WebDriver + Jasmine syntax for JavaScrip....","articleStatus":0,"articlePermalink":"/articles/2018/11/24/1543063983807.html","articleImg1URL":"https://img.hacpai.com/bing/20181222.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"App爬虫神器Mitmproxy和Mitmdump的使用","articleAbstractText":"mitmproxy 是一个支持 HTTP 和 HTTPS 的抓包程序，有类似 Fiddler、Charles 的功能，只不过它是一个控制台的形式操作。  mitmproxy 还有两个关联组件。一个是 mitmdump，它是 mitmproxy 的命令行接口，利用它我们可以对接 Python 脚本，用 Python 实现监听后的处理。另一个是 mitmweb，它是一个 Web 程序，通过它我们可以清楚观察 mitmproxy 捕获的请求。","articleStatus":0,"articlePermalink":"/articles/2018/10/12/1539357030798.html","articleImg1URL":"https://raw.githubusercontent.com/zxniuniu/solo/master/a6db804fdf3d4ceeb4d097256b1a002b_timg1.jpg"},{"articleTitle":"黑科技式 DNS 技术在V2ray代理环境中的应用","articleAbstractText":"这篇文章目的是以技术性例举方式，谈一谈 DNS 技术在 V2ray 代理环境中的使用上，V2Ray 的 DNS 相关功能：https://steemit.com/cn/@v2ray/dns，其用法很多，可以解决很多问题，但如果不理解其工作方式，就很难做出合理的配置。  本文所讨论的也不单纯是 DNS，还涉及 V2Ray 的部分工作原理，因为我们的讨论是依赖于使用 V2Ray 来对 DNS 流量做各种处理的。","articleStatus":0,"articlePermalink":"/articles/2019/05/21/1558442529612.html","articleImg1URL":"https://img.hacpai.com/bing/20180718.jpg?imageView2/1/w/960/h/270/interlace/1/q/100"},{"articleTitle":"Injecting Javascript In HTML Content Using Mitmproxy","articleAbstractText":"An interactive console program that allows traffic flows to be intercepted, inspected, modified and replayed. So basically it gives the proxy administartor the power to modify any traffic that goes through the proxy. You can play with html content, inject elements, get header data, modify headers, dns spoofing, traffic filteration, redirection and a lot more things you can do with mitmproxy.","articleStatus":0,"articlePermalink":"/articles/2018/10/11/1539269886178.html","articleImg1URL":"https://img.hacpai.com/bing/20171225.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Java 配合 Mitmproxy 实现 HTTPS 抓包调试","articleAbstractText":"mitmproxy 是一个命令行下的强大抓包工具，可以在命令行下抓取 HTTP(S) 数据包并加以分析；对于 HTTPS 抓包，首先要在本地添加 mitmproxy 的根证书，然后 mitmproxy 通过以下方式进行抓包","articleStatus":0,"articlePermalink":"/articles/2018/10/10/1539181755175.html","articleImg1URL":"https://mritd.b0.upaiyun.com/markdown/x7lir.jpg"},{"articleTitle":"在Java中调用Python","articleAbstractText":"在微服务架构大行其道的今天，对于将程序进行嵌套调用的做法其实并不可取，甚至显得有些愚蠢。但有时候确实要面对这个问题，恰好我在项目中就遇到了这个问题，需要在Java程序中调用Python程序。关于在Java中调用Python程序的实现，根据不同的用途可以使用多种不同的方法，在这里就将在Java中调用Python程序的方式做一个总结。  方法一、直接通过Runtime进行调用，方法二、通过Jython调用。","articleStatus":0,"articlePermalink":"/articles/2018/09/09/1536454673406.html","articleImg1URL":"https://img.hacpai.com/bing/20180925.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"解决梯子在GFWList模式下不能正常看流媒体的问题","articleAbstractText":"客户端使用 GFWList 模式时观看流媒体。 问题描述：  当使用全局模式或大陆白名单模式时，可以观看流媒体 当使用 GFWList 模式时，无法观看（例如 HBO NOW） 当使用 GFWList 模式时，可以观看，但有卡顿（例如 YouTube）","articleStatus":0,"articlePermalink":"/articles/2018/10/26/1540532958285.html","articleImg1URL":"https://i2.wp.com/myharbour.net/wp-content/uploads/2018/06/HBO-NOW.jpg?resize=1060%2C596"},{"articleTitle":"如何突破网站对Selenium的屏蔽","articleAbstractText":"使用selenium模拟浏览器进行数据抓取无疑是当下最通用的数据采集方案，它通吃各种数据加载方式，能够绕过客户JS加密，绕过爬虫检测，绕过签名机制。它的应用，使得许多网站的反采集策略形同虚设。由于selenium不会在HTTP请求数据中留下指纹，因此无法被网站直接识别和拦截。  这是不是就意味着selenium真的就无法被网站屏蔽了呢？非也。selenium在运行的时候会暴露出一些预定义的Javascript变量（特征字符串），例如\"window.navigator.webdriver\"，在非selenium环境下其值为undefined，而在selenium环境下，其值为true（如下图所示为selenium驱动下Chrome控制台打印出的值）。","articleStatus":0,"articlePermalink":"/articles/2018/10/12/1539355419624.html","articleImg1URL":"https://img.hacpai.com/bing/20180510.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}