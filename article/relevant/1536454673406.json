{"relevantArticles":[{"articleTitle":"Redis高可用集群、哨兵模式（Redis-Sentinel）搭建配置详解","articleAbstractText":"由于本地环境的使用，所以搭建一个本地的 Redis 集群，本篇讲解 Redis 主从复制集群的搭建，使用的平台是 Windows。为了使得集群在一部分节点下线或者无法与集群的大多数节点进行通讯的情况下， 仍然可以正常运作， Redis 集群对节点使用了主从复制功能： 集群中的每个节点都有 1 个至 N 个复制品（replica）， 其中一个复制品为主节点（master）， 而其余的 N-1 个复制品为从节点（slave）。","articleStatus":0,"articlePermalink":"/articles/2019/02/02/1549076687909.html","articleImg1URL":"https://raw.githubusercontent.com/zxniuniu/solo/master/807b1e329290418889f72c4a654e9ca7_wKiom1N3nPbS5JMAAHj5MGbf50000.jpg"},{"articleTitle":"3 ways to start Appium Server from Java","articleAbstractText":"When you start learning Appium or start writing your first test script with it, your initial approach (especially from a beginner\u2019s point of view) would be to start and stop the Appium server manually. Initially, a lot of people start working with the GUI based Appium versions.  GUI versions of Appium are easy to use, and users can easily start and stop the Appium server manually using the controls provided in the tool. After some time, many people would download and install the latest versions ....","articleStatus":0,"articlePermalink":"/articles/2018/11/04/1541295639948.html","articleImg1URL":"http://www.automationtestinghub.com/images/appium/3-different-ways-to-start-appium-server-from-java.png"},{"articleTitle":"Spring 定时任务 No qualifying bean of type TaskScheduler available 及 Could not find default TaskScheduler bean异常处理","articleAbstractText":"最近使用 Spring + SpringMvc + Quartz 的系统中，使用@annotation 注解方式, 直接在类的方法上使用@Scheduled(cron=\u201d0 /5 * * ?\u201d)来实现定时任务，在使用 debug 日志级别时，启动提示 No qualifying bean of type TaskScheduler available 及 Could not find default TaskScheduler bean 异常。可以通过配置日志级别进行解决。","articleStatus":0,"articlePermalink":"/articles/2019/05/29/1559099232927.html","articleImg1URL":"https://img.hacpai.com/bing/20180418.jpg?imageView2/1/w/960/h/270/interlace/1/q/100"},{"articleTitle":"自建内网可用JRebel激活服务器","articleAbstractText":"自建内网可用 JRebel 激活服务器，主要采用 JrebelLicenseServerforJava，部署于服务器上的 Tomcat 中提供服务。  服务器地址，打开后有使用说明：http://niuniu.hicp.net/jrebel","articleStatus":0,"articlePermalink":"/articles/2018/10/09/1539066409411.html","articleImg1URL":"https://raw.githubusercontent.com/zxniuniu/solo/master/2233ce58e5eb4652b2e8ade9cc9f3dd8_Jrebel.PNG"},{"articleTitle":"如何突破网站对Selenium的屏蔽","articleAbstractText":"使用selenium模拟浏览器进行数据抓取无疑是当下最通用的数据采集方案，它通吃各种数据加载方式，能够绕过客户JS加密，绕过爬虫检测，绕过签名机制。它的应用，使得许多网站的反采集策略形同虚设。由于selenium不会在HTTP请求数据中留下指纹，因此无法被网站直接识别和拦截。  这是不是就意味着selenium真的就无法被网站屏蔽了呢？非也。selenium在运行的时候会暴露出一些预定义的Javascript变量（特征字符串），例如\"window.navigator.webdriver\"，在非selenium环境下其值为undefined，而在selenium环境下，其值为true（如下图所示为selenium驱动下Chrome控制台打印出的值）。","articleStatus":0,"articlePermalink":"/articles/2018/10/12/1539355419624.html","articleImg1URL":"https://img.hacpai.com/bing/20180510.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Pros and cons of end to end testing tools","articleAbstractText":"My background in test automation is based on using Selenium WebDriver and Java. Since JavaScript has been widely used for testing web applications, I have decided to investigate tools currently available on the market. I will use these tools to make different scripts and hence find their advantages and disadvantages.  I have investigated the following tools and syntax for automation:  Selenium Webdriver + Java Selenium WebDriver + Cucumber + Java Selenium WebDriver + Jasmine syntax for JavaScrip....","articleStatus":0,"articlePermalink":"/articles/2018/11/24/1543063983807.html","articleImg1URL":"https://img.hacpai.com/bing/20181222.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Idea 中使用 JRebel 实现 SpringBoot 热部署","articleAbstractText":"在 SpringBoot 开发过程中，当 Debug 项目时，修改代码逻辑、修改接口路由、新增工具类等等情况下，一般都需要重新启动工程。通过配置 JRebel 可实现热部署，保存代码后自动编译新文件，并通过 JRebel 自动 Reload，从而实现快捷开发。","articleStatus":0,"articlePermalink":"/articles/2020/03/26/1585192214841.html","articleImg1URL":"https://img.hacpai.com/bing/20180408.jpg?imageView2/1/w/960/h/240/interlace/1/q/100"},{"articleTitle":"Spring MVC 控制器定义与@RequestMapping详解","articleAbstractText":"控制器提供访问应用程序的行为，通常通过服务接口定义或注解定义两种方法实现。 控制器解析用户的请求并将其转换为一个模型。在 Spring MVC 中一个控制器可以包含多个 Action（动作、方法）。","articleStatus":0,"articlePermalink":"/articles/2018/12/23/1545494483392.html","articleImg1URL":"https://img.hacpai.com/bing/20180223.jpg?imageView2/1/w/960/h/520/interlace/1/q/100"},{"articleTitle":"Java 配合 Mitmproxy 实现 HTTPS 抓包调试","articleAbstractText":"mitmproxy 是一个命令行下的强大抓包工具，可以在命令行下抓取 HTTP(S) 数据包并加以分析；对于 HTTPS 抓包，首先要在本地添加 mitmproxy 的根证书，然后 mitmproxy 通过以下方式进行抓包","articleStatus":0,"articlePermalink":"/articles/2018/10/10/1539181755175.html","articleImg1URL":"https://mritd.b0.upaiyun.com/markdown/x7lir.jpg"},{"articleTitle":"感受Lambda之美，推荐收藏，需要时查阅","articleAbstractText":"Java8 最大的特性就是引入 Lambda 表达式，即函数式编程，可以将行为进行传递。总结就是：使用不可变值与函数，函数对不可变值进行处理，映射成另一个值。","articleStatus":0,"articlePermalink":"/articles/2019/06/09/1560086633135.html","articleImg1URL":"https://img.hacpai.com/bing/20190322.jpg?imageView2/1/w/960/h/300/interlace/1/q/100"}]}