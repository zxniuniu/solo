{"relevantArticles":[{"articleTitle":"黑科技式 DNS 技术在V2ray代理环境中的应用","articleAbstractText":"这篇文章目的是以技术性例举方式，谈一谈 DNS 技术在 V2ray 代理环境中的使用上，V2Ray 的 DNS 相关功能：https://steemit.com/cn/@v2ray/dns，其用法很多，可以解决很多问题，但如果不理解其工作方式，就很难做出合理的配置。  本文所讨论的也不单纯是 DNS，还涉及 V2Ray 的部分工作原理，因为我们的讨论是依赖于使用 V2Ray 来对 DNS 流量做各种处理的。","articleStatus":0,"articlePermalink":"/articles/2019/05/21/1558442529612.html","articleImg1URL":"https://img.hacpai.com/bing/20180718.jpg?imageView2/1/w/960/h/270/interlace/1/q/100"},{"articleTitle":"App爬虫神器Mitmproxy和Mitmdump的使用","articleAbstractText":"mitmproxy 是一个支持 HTTP 和 HTTPS 的抓包程序，有类似 Fiddler、Charles 的功能，只不过它是一个控制台的形式操作。  mitmproxy 还有两个关联组件。一个是 mitmdump，它是 mitmproxy 的命令行接口，利用它我们可以对接 Python 脚本，用 Python 实现监听后的处理。另一个是 mitmweb，它是一个 Web 程序，通过它我们可以清楚观察 mitmproxy 捕获的请求。","articleStatus":0,"articlePermalink":"/articles/2018/10/12/1539357030798.html","articleImg1URL":"https://raw.githubusercontent.com/zxniuniu/solo/master/a6db804fdf3d4ceeb4d097256b1a002b_timg1.jpg"},{"articleTitle":"使用 Mitmproxy 和 Python 做拦截代理","articleAbstractText":"本文是一个较为完整的 Mitmproxy 教程，侧重于介绍如何开发拦截脚本，帮助读者能够快速得到一个自定义的代理工具。 本文假设读者有基本的 python 知识，且已经安装好了一个 Python3 开发环境。","articleStatus":0,"articlePermalink":"/articles/2018/10/10/1539183788285.html","articleImg1URL":"https://img.hacpai.com/bing/20181017.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"3 ways to start Appium Server from Java","articleAbstractText":"When you start learning Appium or start writing your first test script with it, your initial approach (especially from a beginner\u2019s point of view) would be to start and stop the Appium server manually. Initially, a lot of people start working with the GUI based Appium versions.  GUI versions of Appium are easy to use, and users can easily start and stop the Appium server manually using the controls provided in the tool. After some time, many people would download and install the latest versions ....","articleStatus":0,"articlePermalink":"/articles/2018/11/04/1541295639948.html","articleImg1URL":"http://www.automationtestinghub.com/images/appium/3-different-ways-to-start-appium-server-from-java.png"},{"articleTitle":"OpenResty中的ngx.location.capture和ngx.location.capture_multi使用","articleAbstractText":"= 表示将 URI 作为字符串，以便于参数中的 URI 做完全匹配。 ~ 表示匹配 URI 时，字母大小写是敏感的。 ~*表示匹配 URI 时，忽略字母大小写。 ^~ 表示匹配 URI 时，只需要前半部分与 uri 参数匹配即可。 @表示用于 nginx 服务器内部请求之间的重定向，带有@的 location 不直接处理用户请求。 uri 参数可以使用正则表达式。 使用 locaiton / {}可以匹配所有的请求。 首先匹配 =，其次匹配 ^~, 其次是按文件中顺序的正则匹配，最后是交给 / 通用匹配。当有匹配成功时候，停止匹配，按当前匹配规则处理请求。 = 精确匹配会第一个被处理。如果发现精确匹配，nginx 停止搜索其他匹配。 普通字符匹配，正则表达式规则和长的块规则将被优先和查询匹配，也就是说如果该项匹配还需去看有没有正则表达式匹配和更长的匹配。","articleStatus":0,"articlePermalink":"/articles/2019/02/21/1550713663087.html","articleImg1URL":"https://img.hacpai.com/bing/20180507.jpg?imageView2/1/w/960/h/340/interlace/1/q/100"},{"articleTitle":"Pros and cons of end to end testing tools","articleAbstractText":"My background in test automation is based on using Selenium WebDriver and Java. Since JavaScript has been widely used for testing web applications, I have decided to investigate tools currently available on the market. I will use these tools to make different scripts and hence find their advantages and disadvantages.  I have investigated the following tools and syntax for automation:  Selenium Webdriver + Java Selenium WebDriver + Cucumber + Java Selenium WebDriver + Jasmine syntax for JavaScrip....","articleStatus":0,"articlePermalink":"/articles/2018/11/24/1543063983807.html","articleImg1URL":"https://img.hacpai.com/bing/20181222.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"SS/SSR中转V2ray起飞教程","articleAbstractText":"目前市面上已经有很多机场（提供 SS/SSR 服务的网站），且不乏众多公益机场，这些机场因为拥有一些好线路的服务器，所以在使用的时候可以获得较好的突破网络封锁的体验。本文的初衷是规避使用机场时流量隐私泄露的问题\u2014\u2014如何使用机场服务的同时不暴露自己的流量隐私。","articleStatus":0,"articlePermalink":"/articles/2019/05/23/1558608311047.html","articleImg1URL":"https://img.hacpai.com/file/2019/05/ssssrtov2ray-76f51eaf.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"解决梯子在GFWList模式下不能正常看流媒体的问题","articleAbstractText":"客户端使用 GFWList 模式时观看流媒体。 问题描述：  当使用全局模式或大陆白名单模式时，可以观看流媒体 当使用 GFWList 模式时，无法观看（例如 HBO NOW） 当使用 GFWList 模式时，可以观看，但有卡顿（例如 YouTube）","articleStatus":0,"articlePermalink":"/articles/2018/10/26/1540532958285.html","articleImg1URL":"https://i2.wp.com/myharbour.net/wp-content/uploads/2018/06/HBO-NOW.jpg?resize=1060%2C596"},{"articleTitle":"Java 配合 Mitmproxy 实现 HTTPS 抓包调试","articleAbstractText":"mitmproxy 是一个命令行下的强大抓包工具，可以在命令行下抓取 HTTP(S) 数据包并加以分析；对于 HTTPS 抓包，首先要在本地添加 mitmproxy 的根证书，然后 mitmproxy 通过以下方式进行抓包","articleStatus":0,"articlePermalink":"/articles/2018/10/10/1539181755175.html","articleImg1URL":"https://mritd.b0.upaiyun.com/markdown/x7lir.jpg"},{"articleTitle":"记一次WebDriver无法正常加载www.xxx.com域名Cookie文件的解决办法","articleAbstractText":"具体问题为，在使用 WebDriver 正常登录网址后，进行了 Cookie 保存，但在下次自动反序列化加载 Cookie 时发现无法正常加载，导致每次需要重新登录验证，目前采用了一种曲线救国的方式，在序列化 Cookie 时调整域名为 xxx.com，具体方案如下。","articleStatus":0,"articlePermalink":"/articles/2019/05/29/1559101766149.html","articleImg1URL":"https://img.hacpai.com/bing/20190522.jpg?imageView2/1/w/960/h/270/interlace/1/q/100"}]}