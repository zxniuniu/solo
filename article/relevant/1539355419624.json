{"relevantArticles":[{"articleTitle":"记一次WebDriver无法正常加载www.xxx.com域名Cookie文件的解决办法","articleAbstractText":"具体问题为，在使用 WebDriver 正常登录网址后，进行了 Cookie 保存，但在下次自动反序列化加载 Cookie 时发现无法正常加载，导致每次需要重新登录验证，目前采用了一种曲线救国的方式，在序列化 Cookie 时调整域名为 xxx.com，具体方案如下。","articleStatus":0,"articlePermalink":"/articles/2019/05/29/1559101766149.html","articleImg1URL":"https://img.hacpai.com/bing/20190522.jpg?imageView2/1/w/960/h/270/interlace/1/q/100"},{"articleTitle":"Pros and cons of end to end testing tools","articleAbstractText":"My background in test automation is based on using Selenium WebDriver and Java. Since JavaScript has been widely used for testing web applications, I have decided to investigate tools currently available on the market. I will use these tools to make different scripts and hence find their advantages and disadvantages.  I have investigated the following tools and syntax for automation:  Selenium Webdriver + Java Selenium WebDriver + Cucumber + Java Selenium WebDriver + Jasmine syntax for JavaScrip....","articleStatus":0,"articlePermalink":"/articles/2018/11/24/1543063983807.html","articleImg1URL":"https://img.hacpai.com/bing/20181222.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"3 ways to start Appium Server from Java","articleAbstractText":"When you start learning Appium or start writing your first test script with it, your initial approach (especially from a beginner\u2019s point of view) would be to start and stop the Appium server manually. Initially, a lot of people start working with the GUI based Appium versions.  GUI versions of Appium are easy to use, and users can easily start and stop the Appium server manually using the controls provided in the tool. After some time, many people would download and install the latest versions ....","articleStatus":0,"articlePermalink":"/articles/2018/11/04/1541295639948.html","articleImg1URL":"http://www.automationtestinghub.com/images/appium/3-different-ways-to-start-appium-server-from-java.png"},{"articleTitle":"Javascript Injection With Selenium, Puppeteer, And Marionette In Chrome And Firefox","articleAbstractText":"Browser automation frameworks\u2013like Puppeteer, Selenium, Marionette, and Nightmare.js\u2013strive to provide rich APIs for configuring and interacting with Web browsers. These generally work quite well, but you\u2019re inevitably going to end up running into API limitations if you do a lot of testing or Web scraping. You might find yourself wanting to conceal the fact that you\u2019re using a headless browser, extract image resources from a Web page, set the seed for Math.random(), or mock the browser\u2019s geoloca....","articleStatus":0,"articlePermalink":"/articles/2018/10/12/1539357955729.html","articleImg1URL":"https://img.hacpai.com/bing/20180504.jpg?imageView2/1/w/960/h/520/interlace/1/q/100"},{"articleTitle":"App爬虫神器Mitmproxy和Mitmdump的使用","articleAbstractText":"mitmproxy 是一个支持 HTTP 和 HTTPS 的抓包程序，有类似 Fiddler、Charles 的功能，只不过它是一个控制台的形式操作。  mitmproxy 还有两个关联组件。一个是 mitmdump，它是 mitmproxy 的命令行接口，利用它我们可以对接 Python 脚本，用 Python 实现监听后的处理。另一个是 mitmweb，它是一个 Web 程序，通过它我们可以清楚观察 mitmproxy 捕获的请求。","articleStatus":0,"articlePermalink":"/articles/2018/10/12/1539357030798.html","articleImg1URL":"https://raw.githubusercontent.com/zxniuniu/solo/master/a6db804fdf3d4ceeb4d097256b1a002b_timg1.jpg"},{"articleTitle":"Injecting Javascript In HTML Content Using Mitmproxy","articleAbstractText":"An interactive console program that allows traffic flows to be intercepted, inspected, modified and replayed. So basically it gives the proxy administartor the power to modify any traffic that goes through the proxy. You can play with html content, inject elements, get header data, modify headers, dns spoofing, traffic filteration, redirection and a lot more things you can do with mitmproxy.","articleStatus":0,"articlePermalink":"/articles/2018/10/11/1539269886178.html","articleImg1URL":"https://img.hacpai.com/bing/20171225.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"使用 Mitmproxy 和 Python 做拦截代理","articleAbstractText":"本文是一个较为完整的 Mitmproxy 教程，侧重于介绍如何开发拦截脚本，帮助读者能够快速得到一个自定义的代理工具。 本文假设读者有基本的 python 知识，且已经安装好了一个 Python3 开发环境。","articleStatus":0,"articlePermalink":"/articles/2018/10/10/1539183788285.html","articleImg1URL":"https://img.hacpai.com/bing/20181017.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Java 配合 Mitmproxy 实现 HTTPS 抓包调试","articleAbstractText":"mitmproxy 是一个命令行下的强大抓包工具，可以在命令行下抓取 HTTP(S) 数据包并加以分析；对于 HTTPS 抓包，首先要在本地添加 mitmproxy 的根证书，然后 mitmproxy 通过以下方式进行抓包","articleStatus":0,"articlePermalink":"/articles/2018/10/10/1539181755175.html","articleImg1URL":"https://mritd.b0.upaiyun.com/markdown/x7lir.jpg"},{"articleTitle":"在Java中调用Python","articleAbstractText":"在微服务架构大行其道的今天，对于将程序进行嵌套调用的做法其实并不可取，甚至显得有些愚蠢。但有时候确实要面对这个问题，恰好我在项目中就遇到了这个问题，需要在Java程序中调用Python程序。关于在Java中调用Python程序的实现，根据不同的用途可以使用多种不同的方法，在这里就将在Java中调用Python程序的方式做一个总结。  方法一、直接通过Runtime进行调用，方法二、通过Jython调用。","articleStatus":0,"articlePermalink":"/articles/2018/09/09/1536454673406.html","articleImg1URL":"https://img.hacpai.com/bing/20180925.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}